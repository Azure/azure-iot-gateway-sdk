# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: 'Ubuntu 16.04'

steps:
- script: |
    sudo apt-cache madison libssl-dev
    sudo apt-cache madison openssl
  displayName: List available package versions for libssl-dev, openssl
- script: |
    sudo apt-get update
    sudo apt-get install -y libcurl4-openssl-dev uuid-dev
  displayName: Install prerequisites
- script: |
    libssl_version=$(apt-cache policy libssl1.0.0 | grep -e Installed: | head -1 | awk '{print $NF}')
    sudo apt-get install -y libssl-dev=$libssl_version
  displayName: Install 1.0 version of libssl-dev
- script: sudo apt list --installed
  displayName: list installed installed packages
- script: v1/tools/build.sh --run-unittests
  displayName: Run the build
- task: CopyFiles@2
  displayName: Collect build logs
  condition: always()
  inputs:
    SourceFolder: v1/deps/c-utility/build
    Contents: '*.txt'
    TargetFolder: $(Build.ArtifactStagingDirectory)
- task: PublishBuildArtifacts@1
  displayName: Publish build logs
  condition: always()
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)
    ArtifactName: build logs
    Parallel: true
    ParallelCount: 8